name: Build & Test & Publish SDK

on:
  push:
    branches: [ main ]
  pull_request:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean compile

    - name: Run tests
      run: mvn test

    - name: Package
      run: mvn package -DskipTests

    - name: Verify JAR built
      run: ls -lh target/*.jar

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-files
        path: target/*.jar

  # Publish SNAPSHOT to GitHub Packages (khi push to main)
  publish-snapshot:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Java for GitHub Packages
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set SNAPSHOT version
      run: |
        mvn versions:set -DnewVersion=1.0.0-SNAPSHOT
        mvn versions:commit

    - name: Publish SNAPSHOT to GitHub Packages ONLY
      run: mvn clean deploy -DskipTests -Pgithub-packages -s $GITHUB_WORKSPACE/.github/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Publish to Maven Central (chỉ khi có release hoặc manual trigger)
  publish-maven:
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'release' || 
      github.event_name == 'workflow_dispatch'
    permissions:
      contents: read

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Java for Maven Central
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Determine version
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION=${{ github.event.inputs.version }}
        else
          VERSION="1.0.0"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Using version: $VERSION"

    - name: Set release version (NO SNAPSHOT)
      run: |
        mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}
        mvn versions:commit
        echo "Set version to: ${{ steps.get_version.outputs.VERSION }}"

    - name: Build artifacts
      run: mvn clean package -DskipTests

    - name: 🌟 Deploy to Maven Central ONLY
      run: mvn deploy -DskipTests -Pmaven-central -s $GITHUB_WORKSPACE/.github/settings.xml
      env:
        CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
        CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}

    - name: ✅ Success notification
      run: |
        echo "🎉 Successfully deployed v${{ steps.get_version.outputs.VERSION }} to Maven Central!"
        echo "🌐 Check: https://central.sonatype.com/artifact/io.github.doanngocthanh/devhub-sdk"
