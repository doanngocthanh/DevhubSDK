package com.devhub.io.vn;

import security.license.LicenseValidator.LicenseValidationException;

/**
 * Quick Start Guide - H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng nhanh DevHub SDK
 * 
 * @author ƒêo√†n Ng·ªçc Th√†nh
 * @version 1.0.0
 */
public class QuickStart {
    
    public static void main(String[] args) {
        System.out.println("========== DevHub SDK - Quick Start ==========\n");
        
        // C√°ch s·ª≠ d·ª•ng ƒë∆°n gi·∫£n nh·∫•t
        simpleUsage();
        
        //System.out.println("\n" + "=".repeat(47));
        
        // C√°ch s·ª≠ d·ª•ng n√¢ng cao
     //   advancedUsage();
    }
    
    /**
     * C√°ch s·ª≠ d·ª•ng ƒë∆°n gi·∫£n - ch·ªâ c·∫ßn 3 b∆∞·ªõc
     */
    public static void simpleUsage() {
        System.out.println("üöÄ SIMPLE USAGE - Ch·ªâ c·∫ßn 3 b∆∞·ªõc:");
        System.out.println("1Ô∏è‚É£ T·∫°o instance DevhubSDK v·ªõi license key");
        System.out.println("2Ô∏è‚É£ S·ª≠ d·ª•ng c√°c method c√≥ s·∫µn");
        System.out.println("3Ô∏è‚É£ ƒê√≥ng SDK khi xong\n");
        
        DevhubSDK sdk = null;
        try {
            // B∆∞·ªõc 1: Kh·ªüi t·∫°o v·ªõi license
            sdk = new DevhubSDK("B7GZ-YD59-QMYM-SMSW");
            
            // B∆∞·ªõc 2: S·ª≠ d·ª•ng
            System.out.println("üîê M√£ h√≥a text:");
            String encrypted = sdk.encrypt("Hello World!");
            System.out.println("   K·∫øt qu·∫£: " + encrypted);
            
            System.out.println("üîì Gi·∫£i m√£ text:");
            String decrypted = sdk.decrypt(encrypted);
            System.out.println("   K·∫øt qu·∫£: " + decrypted);
            
            System.out.println("üìä Th√¥ng tin SDK:");
            System.out.println("   Version: " + sdk.getVersion());
            System.out.println("   Ready: " + sdk.isReady());
            
        } catch (LicenseValidationException e) {
            System.err.println("‚ùå License kh√¥ng h·ª£p l·ªá: " + e.getMessage());
        } finally {
            // B∆∞·ªõc 3: ƒê√≥ng SDK
            if (sdk != null) {
                sdk.close();
            }
        }
    }
    
    /**
     * C√°ch s·ª≠ d·ª•ng n√¢ng cao v·ªõi nhi·ªÅu features
     */
    public static void advancedUsage() {
        System.out.println("üî• ADVANCED USAGE - S·ª≠ d·ª•ng ƒë·∫ßy ƒë·ªß features:");
        
        DevhubSDK sdk = null;
        try {
            // Kh·ªüi t·∫°o SDK
            sdk = new DevhubSDK("B7GZ-YD59-QMYM-SMSW");
            
            // 1. Computer Vision
            System.out.println("\nüéØ COMPUTER VISION:");
            try {
                sdk.loadComputerVisionModel("yolov8n.pt");
                YoloV8.DetectionResult[] objects = sdk.detectObjects("image.jpg", 0.5f);
                System.out.println("   Detected " + objects.length + " objects");
            } catch (Exception e) {
                System.out.println("   ‚ÑπÔ∏è Computer Vision demo (simulation)");
            }
            
            // 2. Crypto Utils
            System.out.println("\nüîê CRYPTO UTILITIES:");
            String sensitiveData = "Th√¥ng tin b·∫£o m·∫≠t";
            String encryptedData = sdk.encrypt(sensitiveData);
            String decryptedData = sdk.decrypt(encryptedData);
            System.out.println("   Original: " + sensitiveData);
            System.out.println("   Encrypted: " + encryptedData);
            System.out.println("   Decrypted: " + decryptedData);
            
            // 3. Vietnam Services
            System.out.println("\nüáªüá≥ VIETNAM SERVICES:");
            System.out.println("   Banking Service: " + 
                (sdk.getBankingService() != null ? "‚úÖ Available" : "‚ùå Not available"));
            System.out.println("   ID Card Service: " + 
                (sdk.getIdCardService() != null ? "‚úÖ Available" : "‚ùå Not available"));
            System.out.println("   Address Service: " + 
                (sdk.getAddressService() != null ? "‚úÖ Available" : "‚ùå Not available"));
            
            // 4. License Management
            System.out.println("\nüìã LICENSE MANAGEMENT:");
            System.out.println("   " + sdk.getLicenseInfo());
            
            // 5. SDK Information
            System.out.println("\nüì¶ SDK INFORMATION:");
            sdk.printSDKInfo();
            
        } catch (LicenseValidationException e) {
            System.err.println("‚ùå License validation failed: " + e.getMessage());
            System.err.println("üí° Li√™n h·ªá support@devhub.io.vn ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£");
        } finally {
            if (sdk != null) {
                sdk.close();
            }
        }
    }
    
    /**
     * Demo pattern s·ª≠ d·ª•ng v·ªõi try-with-resources (n·∫øu implement AutoCloseable)
     */
    public static void tryWithResourcesPattern() {
        System.out.println("üîÑ TRY-WITH-RESOURCES PATTERN:");
        
        // Hi·ªán t·∫°i ch∆∞a implement AutoCloseable, nh∆∞ng c√≥ th·ªÉ th√™m sau
        try {
            DevhubSDK sdk = new DevhubSDK("your-license-key");
            
            // S·ª≠ d·ª•ng SDK
            String result = sdk.encrypt("test data");
            System.out.println("Result: " + result);
            
            // T·ª± ƒë·ªông close khi ra kh·ªèi try block
            sdk.close();
            
        } catch (LicenseValidationException e) {
            System.err.println("License error: " + e.getMessage());
        }
    }
    
    /**
     * Demo error handling patterns
     */
    public static void errorHandlingDemo() {
        System.out.println("‚ö†Ô∏è ERROR HANDLING PATTERNS:");
        
        try {
            // Test v·ªõi license key kh√¥ng h·ª£p l·ªá
            DevhubSDK sdk = new DevhubSDK("invalid-license-key");
            
        } catch (LicenseValidationException e) {
            System.err.println("X·ª≠ l√Ω l·ªói license:");
            System.err.println("- Ki·ªÉm tra license key");
            System.err.println("- Li√™n h·ªá support@devhub.io.vn");
            System.err.println("- Ki·ªÉm tra k·∫øt n·ªëi internet");
        }
    }
}
